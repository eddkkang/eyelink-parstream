drop table tb_da_clustering_master;
drop table tb_da_clustering_detail;

create table tb_da_clustering_master
(
   data_year INT16          INDEX EQUAL CSV_COLUMN 0,
   da_date   TIMESTAMP INDEX RANGE INDEX_GRANULARITY DAY CSV_COLUMN 1,
   start_date TIMESTAMP INDEX RANGE INDEX_GRANULARITY DAY CSV_COLUMN 2,
   end_date TIMESTAMP INDEX RANGE INDEX_GRANULARITY DAY CSV_COLUMN 3,
   time_interval UINT8 COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 4 SKIP FALSE,
   c0_voltage_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 5 SKIP FALSE,
   c1_voltage_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 6 SKIP FALSE,
   c2_voltage_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 7 SKIP FALSE,
   c3_voltage_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 8 SKIP FALSE,
   c0_ampere_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 9 SKIP FALSE,
   c1_ampere_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 10 SKIP FALSE,
   c2_ampere_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 11 SKIP FALSE,
   c3_ampere_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 12 SKIP FALSE,
   c0_active_power_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 13 SKIP FALSE,
   c1_active_power_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 14 SKIP FALSE,
   c2_active_power_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 15 SKIP FALSE,
   c3_active_power_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 16 SKIP FALSE,
   c0_power_factor_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 17 SKIP FALSE,
   c1_power_factor_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 18 SKIP FALSE,
   c2_power_factor_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 19 SKIP FALSE,
   c3_power_factor_node VARSTRING(2000) COMPRESSION NONE MAPPING_FILE_GRANULARITY 256 SINGLE_VALUE CSV_COLUMN 20 SKIP FALSE,
)
PARTITION BY data_year
DISTRIBUTE OVER data_year
IMPORT_DIRECTORY_PATTERN '.*'
IMPORT_FILE_PATTERN 'tb_da_clustering_master.*\.csv'
ETL (select *  from csvfetch(tb_da_clustering_master));

create table tb_da_clustering_detail
(
   data_year INT16          INDEX EQUAL CSV_COLUMN 0,
   da_date   TIMESTAMP INDEX RANGE INDEX_GRANULARITY DAY CSV_COLUMN 1,
   event_time TIMESTAMP INDEX RANGE INDEX_GRANULARITY DAY CSV_COLUMN 2,
   c0_voltage FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 3 SKIP FALSE,
   c1_voltage FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 4 SKIP FALSE,
   c2_voltage FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 5 SKIP FALSE,
   c3_voltage FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 6 SKIP FALSE,
   c0_ampere FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 7 SKIP FALSE,
   c1_ampere FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 8 SKIP FALSE,
   c2_ampere FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 9 SKIP FALSE,
   c3_ampere FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 10 SKIP FALSE,
   c0_active_power FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 11 SKIP FALSE,
   c1_active_power FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 12 SKIP FALSE,
   c2_active_power FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 13 SKIP FALSE,
   c3_active_power FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 14 SKIP FALSE,
   c0_power_factor FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 15 SKIP FALSE,
   c1_power_factor FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 16 SKIP FALSE,
   c2_power_factor FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 17 SKIP FALSE,
   c3_power_factor FLOAT COMPRESSION NONE SINGLE_VALUE CSV_COLUMN 18 SKIP FALSE,
)
PARTITION BY data_year
DISTRIBUTE OVER data_year
IMPORT_DIRECTORY_PATTERN '.*'
IMPORT_FILE_PATTERN 'tb_da_clustering_detail.*\.csv'
ETL (select *  from csvfetch(tb_da_clustering_detail));

